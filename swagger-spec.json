{
  "openapi": "3.0.0",
  "info": {
    "title": "AyuTrace Backend API",
    "version": "1.0.0",
    "description": "A comprehensive API for managing ayurvedic herbs supply chain traceability system",
    "contact": {
      "name": "AyuTrace Team",
      "email": "support@ayutrace.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://api.ayutrace.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization operations"
    },
    {
      "name": "Raw Material Batches",
      "description": "Raw material batch management for herbs collection and tracking"
    },
    {
      "name": "Supply Chain",
      "description": "Supply chain event tracking throughout the herb processing pipeline"
    },
    {
      "name": "Finished Goods",
      "description": "Finished product management with composition tracking"
    },
    {
      "name": "Documents",
      "description": "Document and file management for certificates, photos, and reports"
    },
    {
      "name": "QR Codes",
      "description": "QR code generation and scanning for product traceability"
    },
    {
      "name": "Species",
      "description": "Herb species management with conservation and regulatory information"
    },
    {
      "name": "Collection Events",
      "description": "Herb collection event tracking with quality metrics"
    },
    {
      "name": "Organization",
      "description": "Organization management operations"
    },
    {
      "name": "Utilities",
      "description": "Utility endpoints for testing and development - enum values and sample data"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter JWT token obtained from login endpoint"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Error message"
          },
          "message": {
            "type": "string",
            "example": "Detailed error message"
          }
        }
      },
      "OrgType": {
        "type": "string",
        "enum": [
          "FARMER",
          "MANUFACTURER",
          "LABS",
          "DISTRIBUTOR"
        ],
        "description": "Organization type for different stakeholders in the supply chain",
        "example": "FARMER"
      },
      "RawMaterialBatchStatus": {
        "type": "string",
        "enum": [
          "CREATED",
          "IN_PROCESSING",
          "PROCESSED",
          "QUARANTINED"
        ],
        "description": "Status of raw material batch in the processing pipeline",
        "example": "CREATED"
      },
      "SupplyChainEventType": {
        "type": "string",
        "enum": [
          "PROCESSING",
          "TESTING",
          "TRANSFER",
          "STORAGE",
          "PACKAGING"
        ],
        "description": "Type of supply chain event",
        "example": "PROCESSING"
      },
      "FinishedGoodProductType": {
        "type": "string",
        "enum": [
          "POWDER",
          "CAPSULE",
          "TABLET",
          "SYRUP",
          "OIL",
          "CREAM"
        ],
        "description": "Type of finished ayurvedic product",
        "example": "POWDER"
      },
      "DocumentType": {
        "type": "string",
        "enum": [
          "CERTIFICATE",
          "PHOTO",
          "INVOICE",
          "REPORT",
          "TEST_RESULT",
          "LICENSE",
          "OTHER"
        ],
        "description": "Type of document being uploaded",
        "example": "CERTIFICATE"
      },
      "DocumentEntityType": {
        "type": "string",
        "enum": [
          "COLLECTION_EVENT",
          "RAW_MATERIAL_BATCH",
          "SUPPLY_CHAIN_EVENT",
          "FINISHED_GOOD"
        ],
        "description": "Type of entity the document is associated with",
        "example": "COLLECTION_EVENT"
      },
      "QREntityType": {
        "type": "string",
        "enum": [
          "RAW_MATERIAL_BATCH",
          "FINISHED_GOOD",
          "SUPPLY_CHAIN_EVENT"
        ],
        "description": "Type of entity that the QR code represents",
        "example": "RAW_MATERIAL_BATCH"
      },
      "ConservationStatus": {
        "type": "string",
        "enum": [
          "LEAST_CONCERN",
          "NEAR_THREATENED",
          "VULNERABLE",
          "ENDANGERED",
          "CRITICALLY_ENDANGERED"
        ],
        "description": "Conservation status of herb species",
        "example": "LEAST_CONCERN"
      },
      "QuantityUnit": {
        "type": "string",
        "enum": [
          "KG",
          "TONNES",
          "GRAMS",
          "POUNDS",
          "PIECES",
          "BOTTLES",
          "BOXES"
        ],
        "description": "Unit of measurement for quantities",
        "example": "KG"
      },
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the user",
            "example": "b1c2d3e4-f5g6-7890-1234-567890abcdef"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address (unique)",
            "example": "rajesh.p@puneorganic.coop"
          },
          "firstName": {
            "type": "string",
            "description": "User first name",
            "example": "Rajesh"
          },
          "lastName": {
            "type": "string",
            "description": "User last name",
            "example": "Patil"
          },
          "orgType": {
            "$ref": "#/components/schemas/OrgType"
          },
          "blockchainIdentity": {
            "type": "string",
            "description": "Optional blockchain identity for the user",
            "example": "user1@cooperative.prakritichain.com",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Optional phone number",
            "example": "+919123456789",
            "nullable": true
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "description": "Last login timestamp",
            "example": "2025-09-03T11:30:00Z",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "User active status",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User creation timestamp",
            "example": "2025-09-02T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp",
            "example": "2025-09-03T11:30:00Z"
          },
          "latitude": {
            "type": "number",
            "format": "float",
            "description": "GPS latitude coordinate",
            "example": 17.6868,
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "description": "GPS longitude coordinate",
            "example": 74.0183,
            "nullable": true
          },
          "location": {
            "type": "string",
            "description": "Location information (especially for farmers)",
            "example": "Satara District, Maharashtra",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "description": "Organization the user belongs to",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "required": [
          "email",
          "passwordHash",
          "firstName",
          "lastName",
          "orgType",
          "organizationId"
        ]
      },
      "UserRegistration": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address",
            "example": "rajesh.p@puneorganic.coop"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "User password (minimum 8 characters)",
            "example": "SecurePassword123!"
          },
          "firstName": {
            "type": "string",
            "minLength": 2,
            "description": "User first name",
            "example": "Rajesh"
          },
          "lastName": {
            "type": "string",
            "minLength": 2,
            "description": "User last name",
            "example": "Patil"
          },
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "description": "Organization ID the user belongs to",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "orgType": {
            "$ref": "#/components/schemas/OrgType"
          },
          "blockchainIdentity": {
            "type": "string",
            "description": "Optional blockchain identity",
            "example": "user1@cooperative.prakritichain.com"
          },
          "phone": {
            "type": "string",
            "description": "Optional phone number",
            "example": "+919876543210"
          },
          "location": {
            "type": "string",
            "description": "Location information",
            "example": "Satara District, Maharashtra"
          },
          "latitude": {
            "type": "number",
            "format": "float",
            "description": "GPS latitude coordinate",
            "example": 17.6868
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "description": "GPS longitude coordinate",
            "example": 74.0183
          }
        },
        "required": [
          "email",
          "password",
          "firstName",
          "lastName",
          "organizationId",
          "orgType"
        ]
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address",
            "example": "rajesh.p@puneorganic.coop"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "SecurePassword123!"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the organization",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "type": {
            "$ref": "#/components/schemas/OrgType"
          }
        },
        "required": [
          "organizationId",
          "type"
        ]
      },
      "RawMaterialBatch": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the batch",
            "example": "c1d2e3f4-g5h6-7890-1234-567890abcdef"
          },
          "herbName": {
            "type": "string",
            "description": "Name of the herb",
            "example": "Ashwagandha"
          },
          "scientificName": {
            "type": "string",
            "description": "Scientific name of the herb",
            "example": "Withania somnifera",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Quantity of the batch",
            "example": 100.5
          },
          "unit": {
            "$ref": "#/components/schemas/QuantityUnit"
          },
          "status": {
            "$ref": "#/components/schemas/RawMaterialBatchStatus"
          },
          "description": {
            "type": "string",
            "description": "Additional description",
            "example": "High quality organic ashwagandha roots",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Any additional notes",
            "example": "Harvested during optimal season",
            "nullable": true
          },
          "currentOwnerId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the current owner",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-09-05T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp",
            "example": "2025-09-05T10:30:00Z"
          }
        },
        "required": [
          "batchId",
          "herbName",
          "quantity",
          "unit",
          "status"
        ]
      },
      "SupplyChainEvent": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the event",
            "example": "d1e2f3g4-h5i6-7890-1234-567890abcdef"
          },
          "eventType": {
            "$ref": "#/components/schemas/SupplyChainEventType"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Event timestamp",
            "example": "2025-09-05T10:30:00Z"
          },
          "handlerId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the person handling the event",
            "example": "b1c2d3e4-f5g6-7890-1234-567890abcdef"
          },
          "fromLocationId": {
            "type": "string",
            "format": "uuid",
            "description": "Source location organization ID",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "toLocationId": {
            "type": "string",
            "format": "uuid",
            "description": "Destination location organization ID",
            "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
          },
          "rawMaterialBatchId": {
            "type": "string",
            "format": "uuid",
            "description": "Associated raw material batch ID",
            "example": "c1d2e3f4-g5h6-7890-1234-567890abcdef",
            "nullable": true
          },
          "finishedGoodId": {
            "type": "string",
            "format": "uuid",
            "description": "Associated finished good ID",
            "example": "e1f2g3h4-i5j6-7890-1234-567890abcdef",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Additional notes about the event",
            "example": "Quality testing completed successfully",
            "nullable": true
          },
          "custody": {
            "type": "object",
            "description": "Custody transfer information",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-09-05T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp",
            "example": "2025-09-05T10:30:00Z"
          }
        },
        "required": [
          "eventId",
          "eventType",
          "timestamp",
          "handlerId",
          "fromLocationId",
          "toLocationId"
        ]
      },
      "FinishedGood": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the finished good",
            "example": "e1f2g3h4-i5j6-7890-1234-567890abcdef"
          },
          "productName": {
            "type": "string",
            "description": "Name of the finished product",
            "example": "Ashwagandha Churna"
          },
          "productType": {
            "$ref": "#/components/schemas/FinishedGoodProductType"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity produced",
            "example": 50
          },
          "unit": {
            "$ref": "#/components/schemas/QuantityUnit"
          },
          "manufacturerId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the manufacturer",
            "example": "b1c2d3e4-f5g6-7890-1234-567890abcdef"
          },
          "description": {
            "type": "string",
            "description": "Product description",
            "example": "Pure Ashwagandha powder for wellness",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "description": "Batch number for the product",
            "example": "FG-2025-001",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "description": "Product expiry date",
            "example": "2027-09-05T08:00:00Z",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-09-05T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp",
            "example": "2025-09-05T10:30:00Z"
          }
        },
        "required": [
          "productId",
          "productName",
          "productType",
          "quantity",
          "unit",
          "manufacturerId"
        ]
      },
      "Document": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the document",
            "example": "f1g2h3i4-j5k6-7890-1234-567890abcdef"
          },
          "fileName": {
            "type": "string",
            "description": "Original file name",
            "example": "organic_certificate.pdf",
            "nullable": true
          },
          "filePath": {
            "type": "string",
            "description": "File storage path",
            "example": "/uploads/documents/f1g2h3i4-j5k6-7890-organic_certificate.pdf"
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "example": 2048576
          },
          "mimeType": {
            "type": "string",
            "description": "MIME type of the file",
            "example": "application/pdf"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "description": {
            "type": "string",
            "description": "Description of the document",
            "example": "Organic certification for batch",
            "nullable": true
          },
          "uploadedBy": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user who uploaded the document",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean",
            "description": "Whether the document is publicly accessible",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Upload timestamp",
            "example": "2025-09-05T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp",
            "example": "2025-09-05T10:30:00Z"
          },
          "collectionEventId": {
            "type": "string",
            "format": "uuid",
            "description": "Associated collection event ID",
            "nullable": true
          },
          "rawMaterialBatchId": {
            "type": "string",
            "format": "uuid",
            "description": "Associated raw material batch ID",
            "nullable": true
          },
          "supplyChainEventId": {
            "type": "string",
            "format": "uuid",
            "description": "Associated supply chain event ID",
            "nullable": true
          },
          "finishedGoodId": {
            "type": "string",
            "format": "uuid",
            "description": "Associated finished good ID",
            "nullable": true
          }
        },
        "required": [
          "documentId",
          "filePath",
          "fileSize",
          "mimeType",
          "documentType"
        ]
      },
      "QRCode": {
        "type": "object",
        "properties": {
          "qrCodeId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the QR code",
            "example": "g1h2i3j4-k5l6-7890-1234-567890abcdef"
          },
          "qrHash": {
            "type": "string",
            "description": "Unique hash for the QR code",
            "example": "abc123def456ghi789jkl012mno345pqr678"
          },
          "entityType": {
            "$ref": "#/components/schemas/QREntityType"
          },
          "entityId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the entity",
            "example": "c1d2e3f4-g5h6-7890-1234-567890abcdef"
          },
          "generatedBy": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user who generated the QR code",
            "nullable": true
          },
          "customData": {
            "type": "object",
            "description": "Additional custom data for the QR code",
            "example": {
              "batchInfo": "Premium Ashwagandha",
              "harvestDate": "2025-08-15"
            },
            "nullable": true
          },
          "scanCount": {
            "type": "integer",
            "description": "Number of times the QR code has been scanned",
            "example": 15
          },
          "lastScannedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last scan timestamp",
            "example": "2025-09-05T14:30:00Z",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the QR code is active",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-09-05T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp",
            "example": "2025-09-05T10:30:00Z"
          }
        },
        "required": [
          "qrCodeId",
          "qrHash",
          "entityType",
          "entityId"
        ]
      },
      "HerbSpecies": {
        "type": "object",
        "properties": {
          "speciesId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the species",
            "example": "h1i2j3k4-l5m6-7890-1234-567890abcdef"
          },
          "commonName": {
            "type": "string",
            "description": "Common name of the herb",
            "example": "Ashwagandha"
          },
          "scientificName": {
            "type": "string",
            "description": "Scientific name of the herb",
            "example": "Withania somnifera"
          },
          "family": {
            "type": "string",
            "description": "Plant family",
            "example": "Solanaceae",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the herb species",
            "example": "A medicinal herb known for its adaptogenic properties",
            "nullable": true
          },
          "medicinalUses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Medicinal uses of the herb",
            "example": [
              "Stress relief",
              "Immune support",
              "Energy enhancement"
            ]
          },
          "nativeRegions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Native regions where the herb grows",
            "example": [
              "India",
              "Nepal",
              "Sri Lanka"
            ]
          },
          "harvestingSeason": {
            "type": "string",
            "description": "Optimal harvesting season",
            "example": "Winter (December to February)",
            "nullable": true
          },
          "partsUsed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Parts of the plant used medicinally",
            "example": [
              "Root",
              "Leaves"
            ]
          },
          "conservationStatus": {
            "$ref": "#/components/schemas/ConservationStatus"
          },
          "regulatoryInfo": {
            "type": "object",
            "description": "Regulatory information",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-09-05T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp",
            "example": "2025-09-05T10:30:00Z"
          }
        },
        "required": [
          "speciesId",
          "commonName",
          "scientificName"
        ]
      },
      "CollectionEvent": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the collection event",
            "example": "i1j2k3l4-m5n6-7890-1234-567890abcdef"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the collector",
            "example": "b1c2d3e4-f5g6-7890-1234-567890abcdef"
          },
          "farmerId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the farmer",
            "example": "b1c2d3e4-f5g6-7890-1234-567890abcdef",
            "nullable": true
          },
          "herbSpeciesId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the herb species",
            "example": "h1i2j3k4-l5m6-7890-1234-567890abcdef",
            "nullable": true
          },
          "collectionDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date of collection",
            "example": "2025-09-05T08:00:00Z"
          },
          "location": {
            "type": "string",
            "description": "Collection location",
            "example": "Satara District, Maharashtra",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "float",
            "description": "GPS latitude coordinate",
            "example": 17.6868,
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "description": "GPS longitude coordinate",
            "example": 74.0183,
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Quantity collected",
            "example": 25.5,
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "Unit of measurement",
            "example": "KG",
            "nullable": true
          },
          "qualityNotes": {
            "type": "string",
            "description": "Quality assessment notes",
            "example": "Good quality, mature roots",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Additional notes",
            "example": "Collected during optimal weather conditions",
            "nullable": true
          },
          "batchId": {
            "type": "string",
            "format": "uuid",
            "description": "Associated batch ID",
            "example": "c1d2e3f4-g5h6-7890-1234-567890abcdef",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp",
            "example": "2025-09-05T10:30:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp",
            "example": "2025-09-05T10:30:00Z"
          }
        },
        "required": [
          "eventId",
          "collectorId",
          "collectionDate"
        ]
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          },
          "data": {
            "type": "object",
            "description": "Response data",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-03T12:00:00Z"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Validation error"
          },
          "message": {
            "type": "string",
            "example": "Required field is missing"
          },
          "details": {
            "type": "object",
            "description": "Additional error details",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-03T12:00:00Z"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Validation failed"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Field that failed validation",
                  "example": "email"
                },
                "message": {
                  "type": "string",
                  "description": "Validation error message for the field",
                  "example": "A valid email is required"
                },
                "code": {
                  "type": "string",
                  "description": "Validation error code",
                  "example": "invalid_email"
                }
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-03T12:00:00Z"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Login successful"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "token": {
                "type": "string",
                "description": "JWT authentication token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-03T12:00:00Z"
          }
        }
      },
      "HealthCheck": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "OK"
          },
          "message": {
            "type": "string",
            "example": "AyuTrace Backend Server is running"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-03T12:00:00Z"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          }
        }
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user account in the system with organization type-based access control",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "email": "rajesh.p@puneorganic.coop",
                "password": "SecurePassword123!",
                "firstName": "Rajesh",
                "lastName": "Patil",
                "orgType": "FARMER",
                "organizationId": "550e8400-e29b-41d4-a716-446655440000",
                "blockchainIdentity": "user1@cooperative.prakritichain.com",
                "phone": "+919876543210",
                "location": "Satara District, Maharashtra",
                "latitude": 17.6868,
                "longitude": 74.0183
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string",
                          "description": "JWT authentication token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Authenticate user",
        "description": "Authenticates user credentials and returns a JWT token for accessing protected endpoints",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "rajesh.p@puneorganic.coop"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password",
                    "example": "SecurePassword123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "token": {
                          "type": "string",
                          "description": "JWT authentication token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "summary": "Get current user profile",
        "description": "Retrieves the profile information of the currently authenticated user",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/collections": {
      "post": {
        "summary": "Create a new collection event",
        "description": "Record a new herb collection event with quality metrics and location data",
        "tags": [
          "Collection Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantityKg",
                  "initialQualityMetrics",
                  "location"
                ],
                "properties": {
                  "speciesCode": {
                    "type": "string",
                    "description": "Species identifier code (optional)",
                    "example": "ASH-001"
                  },
                  "quantityKg": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0.1,
                    "description": "Quantity of herbs collected in kilograms",
                    "example": 15.5
                  },
                  "initialQualityMetrics": {
                    "type": "string",
                    "description": "JSON string containing quality assessment data",
                    "example": "{\"moisture\": 12.5, \"purity\": 95, \"color\": \"green\", \"aroma\": \"strong\"}"
                  },
                  "filePath": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL of collection photo (optional)",
                    "example": "https://example.com/collection-photo.jpg"
                  },
                  "location": {
                    "type": "string",
                    "description": "JSON string with GPS coordinates",
                    "example": "{\"latitude\": 17.6868, \"longitude\": 74.0183}"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Collection event recorded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Collection event recorded successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "eventId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                        },
                        "collectorId": {
                          "type": "string",
                          "format": "uuid",
                          "example": "b1c2d3e4-f5g6-7890-1234-567890abcdef"
                        },
                        "collectionDate": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-09-05T10:30:00Z"
                        },
                        "quantity": {
                          "type": "number",
                          "example": 15.5
                        },
                        "location": {
                          "type": "string",
                          "example": "Farm Location"
                        },
                        "latitude": {
                          "type": "number",
                          "example": 17.6868
                        },
                        "longitude": {
                          "type": "number",
                          "example": 74.0183
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Quantity must be a positive number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access denied. No token provided."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/collections/by-farmer": {
      "get": {
        "summary": "Get all collection events for the logged-in farmer",
        "description": "Returns all collection events created by the authenticated farmer (farmerId from JWT)",
        "tags": [
          "Collection Events"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Collections fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Collections fetched successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CollectionEvent"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access denied. No token provided."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/raw-material-batches": {
      "post": {
        "summary": "Create a new raw material batch",
        "description": "Creates a new raw material batch for tracking herbs through the supply chain",
        "tags": [
          "Raw Material Batches"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "herbName",
                  "quantity",
                  "unit"
                ],
                "properties": {
                  "herbName": {
                    "type": "string",
                    "description": "Name of the herb",
                    "example": "Ashwagandha"
                  },
                  "scientificName": {
                    "type": "string",
                    "description": "Scientific name of the herb",
                    "example": "Withania somnifera"
                  },
                  "quantity": {
                    "type": "number",
                    "description": "Quantity of the batch",
                    "example": 100.5
                  },
                  "unit": {
                    "$ref": "#/components/schemas/QuantityUnit"
                  },
                  "description": {
                    "type": "string",
                    "description": "Additional description",
                    "example": "High quality organic ashwagandha roots"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Any additional notes",
                    "example": "Harvested during optimal season"
                  },
                  "currentOwnerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the current owner",
                    "example": "b1c2d3e4-f5g6-7890-1234-567890abcdef"
                  },
                  "collectionEventIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "description": "Array of collection event IDs associated with this batch",
                    "example": [
                      "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Raw material batch created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all raw material batches",
        "description": "Retrieve a list of raw material batches with pagination and filtering",
        "tags": [
          "Raw Material Batches"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/RawMaterialBatchStatus"
            },
            "description": "Filter by batch status"
          },
          {
            "in": "query",
            "name": "herbName",
            "schema": {
              "type": "string"
            },
            "description": "Filter by herb name"
          }
        ],
        "responses": {
          "200": {
            "description": "List of raw material batches"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/raw-material-batches/{id}": {
      "get": {
        "summary": "Get a raw material batch by ID",
        "description": "Retrieve detailed information about a specific raw material batch",
        "tags": [
          "Raw Material Batches"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Raw material batch ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Raw material batch details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Raw material batch not found"
          }
        }
      },
      "put": {
        "summary": "Update a raw material batch",
        "description": "Update an existing raw material batch's information",
        "tags": [
          "Raw Material Batches"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Raw material batch ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "herbName": {
                    "type": "string"
                  },
                  "scientificName": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "unit": {
                    "$ref": "#/components/schemas/QuantityUnit"
                  },
                  "status": {
                    "$ref": "#/components/schemas/RawMaterialBatchStatus"
                  },
                  "description": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "currentOwnerId": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Raw material batch updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Raw material batch not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a raw material batch",
        "description": "Delete a raw material batch from the system",
        "tags": [
          "Raw Material Batches"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Raw material batch ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Raw material batch deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Raw material batch not found"
          }
        }
      }
    },
    "/api/supply-chain": {
      "post": {
        "summary": "Create a new supply chain event",
        "description": "Records a new event in the supply chain tracking system",
        "tags": [
          "Supply Chain"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "eventType",
                  "handlerId",
                  "fromLocationId",
                  "toLocationId"
                ],
                "properties": {
                  "eventType": {
                    "$ref": "#/components/schemas/SupplyChainEventType"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Event timestamp (defaults to current time)",
                    "example": "2025-09-05T10:30:00Z"
                  },
                  "rawMaterialBatchId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Associated raw material batch ID (optional)",
                    "example": "c1d2e3f4-g5h6-7890-1234-567890abcdef"
                  },
                  "finishedGoodId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Associated finished good ID (optional)",
                    "example": "e1f2g3h4-i5j6-7890-1234-567890abcdef"
                  },
                  "handlerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the user handling the event",
                    "example": "b1c2d3e4-f5g6-7890-1234-567890abcdef"
                  },
                  "fromLocationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the source organization/location",
                    "example": "f1g2h3i4-j5k6-7890-1234-567890abcdef"
                  },
                  "toLocationId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the destination organization/location",
                    "example": "g1h2i3j4-k5l6-7890-1234-567890abcdef"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Additional notes about the event",
                    "example": "Quality check passed, transferred to processing facility"
                  },
                  "custody": {
                    "type": "object",
                    "description": "Custody information as JSON",
                    "example": {
                      "temperature": "20°C",
                      "humidity": "45%",
                      "transportMethod": "refrigerated truck"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Supply chain event created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all supply chain events",
        "description": "Retrieve supply chain events with pagination and filtering",
        "tags": [
          "Supply Chain"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "eventType",
            "schema": {
              "$ref": "#/components/schemas/SupplyChainEventType"
            },
            "description": "Filter by event type"
          },
          {
            "in": "query",
            "name": "batchId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by batch ID"
          },
          {
            "in": "query",
            "name": "handlerId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by handler ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of supply chain events"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/supply-chain/batch/{batchId}": {
      "get": {
        "summary": "Get supply chain events for a specific batch",
        "description": "Retrieve all supply chain events associated with a batch",
        "tags": [
          "Supply Chain"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "batchId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Batch ID to get events for"
          }
        ],
        "responses": {
          "200": {
            "description": "Supply chain events for the batch"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Batch not found"
          }
        }
      }
    },
    "/api/supply-chain/{id}": {
      "get": {
        "summary": "Get a supply chain event by ID",
        "description": "Retrieve detailed information about a specific supply chain event",
        "tags": [
          "Supply Chain"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Supply chain event ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Supply chain event details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Supply chain event not found"
          }
        }
      },
      "put": {
        "summary": "Update a supply chain event",
        "description": "Update an existing supply chain event",
        "tags": [
          "Supply Chain"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Supply chain event ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventType": {
                    "$ref": "#/components/schemas/SupplyChainEventType"
                  },
                  "eventDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "locationLat": {
                    "type": "number"
                  },
                  "locationLng": {
                    "type": "number"
                  },
                  "details": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Supply chain event updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Supply chain event not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a supply chain event",
        "description": "Delete a supply chain event from the system",
        "tags": [
          "Supply Chain"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Supply chain event ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Supply chain event deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Supply chain event not found"
          }
        }
      }
    },
    "/api/finished-goods": {
      "post": {
        "summary": "Create a new finished good",
        "description": "Creates a new finished product with its composition",
        "tags": [
          "Finished Goods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "productName",
                  "productType",
                  "quantity",
                  "unit",
                  "composition"
                ],
                "properties": {
                  "productName": {
                    "type": "string",
                    "description": "Name of the finished product",
                    "example": "Ashwagandha Churna"
                  },
                  "productType": {
                    "$ref": "#/components/schemas/FinishedGoodProductType"
                  },
                  "description": {
                    "type": "string",
                    "description": "Product description",
                    "example": "Pure Ashwagandha powder for wellness"
                  },
                  "quantity": {
                    "type": "number",
                    "description": "Quantity produced",
                    "example": 50
                  },
                  "unit": {
                    "$ref": "#/components/schemas/QuantityUnit"
                  },
                  "batchNumber": {
                    "type": "string",
                    "description": "Batch number for the product",
                    "example": "FG-ASH-2025-001"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Product expiry date",
                    "example": "2027-09-05T00:00:00Z"
                  },
                  "manufacturerId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the manufacturer",
                    "example": "b1c2d3e4-f5g6-7890-1234-567890abcdef"
                  },
                  "composition": {
                    "type": "array",
                    "description": "Composition of the finished good",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "required": [
                        "rawMaterialBatchId",
                        "percentage",
                        "quantityUsed"
                      ],
                      "properties": {
                        "rawMaterialBatchId": {
                          "type": "string",
                          "description": "Raw material batch ID",
                          "example": "4cbcc605-7b7d-4bbc-975a-72cf68b84776"
                        },
                        "percentage": {
                          "type": "number",
                          "description": "Percentage of this raw material in the finished good",
                          "example": 100
                        },
                        "quantityUsed": {
                          "type": "number",
                          "description": "Quantity of raw material used",
                          "example": 50
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Finished good created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all finished goods",
        "description": "Retrieve finished goods with pagination and filtering",
        "tags": [
          "Finished Goods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "productType",
            "schema": {
              "$ref": "#/components/schemas/FinishedGoodProductType"
            },
            "description": "Filter by product type"
          },
          {
            "in": "query",
            "name": "productName",
            "schema": {
              "type": "string"
            },
            "description": "Filter by product name"
          },
          {
            "in": "query",
            "name": "manufacturerId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by manufacturer ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of finished goods"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/finished-goods/{id}": {
      "get": {
        "summary": "Get a finished good by ID",
        "description": "Retrieve detailed information about a specific finished good",
        "tags": [
          "Finished Goods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Finished good ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Finished good details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Finished good not found"
          }
        }
      },
      "put": {
        "summary": "Update a finished good",
        "description": "Update an existing finished good's information",
        "tags": [
          "Finished Goods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Finished good ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productName": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "unit": {
                    "$ref": "#/components/schemas/QuantityUnit"
                  },
                  "batchNumber": {
                    "type": "string"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "productType": {
                    "$ref": "#/components/schemas/FinishedGoodProductType"
                  },
                  "manufacturerId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "composition": {
                    "type": "array",
                    "description": "Composition of the finished good",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rawMaterialBatchId": {
                          "type": "string",
                          "description": "Raw material batch ID"
                        },
                        "percentage": {
                          "type": "number",
                          "description": "Percentage of this raw material in the finished good"
                        },
                        "quantityUsed": {
                          "type": "number",
                          "description": "Quantity of raw material used"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Finished good updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Finished good not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a finished good",
        "description": "Delete a finished good from the system",
        "tags": [
          "Finished Goods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Finished good ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Finished good deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Finished good not found"
          }
        }
      }
    },
    "/api/finished-goods/{id}/composition": {
      "get": {
        "summary": "Get finished good composition",
        "description": "Retrieve detailed composition and traceability of a finished good",
        "tags": [
          "Finished Goods"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Finished good ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Finished good composition and traceability"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Finished good not found"
          }
        }
      }
    },
    "/api/documents": {
      "post": {
        "summary": "Upload a new document and link to an entity",
        "description": "Upload a document file and associate it with a specific entity (batch, event, etc.)",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file",
                  "documentType",
                  "entityType",
                  "entityId"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Document file to upload (max 10MB)"
                  },
                  "documentType": {
                    "type": "string",
                    "enum": [
                      "CERTIFICATE",
                      "PHOTO",
                      "INVOICE",
                      "REPORT",
                      "TEST_RESULT",
                      "LICENSE",
                      "OTHER"
                    ],
                    "description": "Type of document being uploaded"
                  },
                  "entityType": {
                    "type": "string",
                    "enum": [
                      "COLLECTION_EVENT",
                      "RAW_MATERIAL_BATCH",
                      "SUPPLY_CHAIN_EVENT",
                      "FINISHED_GOOD"
                    ],
                    "description": "Type of entity to link the document to (required)",
                    "example": "RAW_MATERIAL_BATCH"
                  },
                  "entityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "UUID of the entity to link the document to (required)",
                    "example": "a1b2c3d4-e5f6-7890-abcd-1234567890ab"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the document",
                    "example": "Organic certification for ashwagandha batch #001"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document uploaded successfully"
          },
          "400": {
            "description": "Validation error or file upload error"
          },
          "401": {
            "description": "Unauthorized (missing or invalid token)"
          }
        }
      },
      "get": {
        "summary": "Get all documents",
        "description": "Retrieve documents with pagination and filtering",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "documentType",
            "schema": {
              "type": "string"
            },
            "description": "Filter by document type"
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/documents/{id}": {
      "get": {
        "summary": "Get a document by ID",
        "description": "Retrieve detailed information about a specific document",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Document details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update document metadata",
        "description": "Update metadata of an existing document",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Document ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentType": {
                    "$ref": "#/components/schemas/DocumentType"
                  },
                  "description": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document metadata updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a document",
        "description": "Delete a document and its file from the system",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Document deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/api/qr-codes": {
      "post": {
        "summary": "Generate a new QR code",
        "description": "Generate a QR code for traceability of batches or finished goods",
        "tags": [
          "QR Codes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "entityType",
                  "entityId"
                ],
                "properties": {
                  "entityType": {
                    "$ref": "#/components/schemas/QREntityType"
                  },
                  "entityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the entity to generate QR code for",
                    "example": "e1f2g3h4-i5j6-7890-1234-567890abcdef"
                  },
                  "purpose": {
                    "type": "string",
                    "description": "Purpose of the QR code",
                    "example": "Product traceability and authentication"
                  },
                  "customData": {
                    "type": "object",
                    "description": "Additional custom data for the QR code",
                    "example": {
                      "batchInfo": "Premium Ashwagandha",
                      "harvestDate": "2025-08-15"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "QR code generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "qrCodeId": {
                          "type": "string",
                          "description": "Unique QR code ID"
                        },
                        "entityType": {
                          "$ref": "#/components/schemas/QREntityType"
                        },
                        "entityId": {
                          "type": "string"
                        },
                        "qrHash": {
                          "type": "string",
                          "description": "Unique hash for the QR code"
                        },
                        "qrImage": {
                          "type": "string",
                          "format": "data-url",
                          "description": "QR code image as a Data URL"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "QR code generated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all QR codes",
        "description": "Retrieve QR codes with pagination and filtering",
        "tags": [
          "QR Codes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "entityType",
            "schema": {
              "$ref": "#/components/schemas/QREntityType"
            },
            "description": "Filter by entity type"
          },
          {
            "in": "query",
            "name": "entityId",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by entity ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of QR codes"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/qr-codes/scan/{qrHash}": {
      "get": {
        "summary": "Scan a QR code",
        "description": "Scan a QR code and get complete traceability information",
        "tags": [
          "QR Codes"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "qrHash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "QR code hash to scan"
          }
        ],
        "responses": {
          "200": {
            "description": "Traceability information for the scanned QR code"
          },
          "404": {
            "description": "QR code not found"
          }
        }
      }
    },
    "/api/qr-codes/{id}/image": {
      "get": {
        "summary": "Get QR code as image",
        "description": "Retrieve the QR code as a PNG image",
        "tags": [
          "QR Codes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "QR code ID"
          }
        ],
        "responses": {
          "200": {
            "description": "QR code image (PNG)",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "QR code not found"
          }
        }
      }
    },
    "/api/qr-codes/{id}": {
      "get": {
        "summary": "Get a QR code by ID",
        "description": "Retrieve detailed information about a specific QR code",
        "tags": [
          "QR Codes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "QR code ID"
          }
        ],
        "responses": {
          "200": {
            "description": "QR code details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "QR code not found"
          }
        }
      },
      "put": {
        "summary": "Update QR code metadata",
        "description": "Update metadata of an existing QR code",
        "tags": [
          "QR Codes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "QR code ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "purpose": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QR code updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "QR code not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a QR code",
        "description": "Delete a QR code from the system",
        "tags": [
          "QR Codes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "QR code ID"
          }
        ],
        "responses": {
          "200": {
            "description": "QR code deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "QR code not found"
          }
        }
      }
    },
    "/api/species": {
      "post": {
        "summary": "Create a new herb species",
        "description": "Add a new herb species to the database with regulatory information",
        "tags": [
          "Species"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "commonName",
                  "scientificName"
                ],
                "properties": {
                  "commonName": {
                    "type": "string",
                    "description": "Common name of the herb",
                    "example": "Ashwagandha"
                  },
                  "scientificName": {
                    "type": "string",
                    "description": "Scientific name of the herb",
                    "example": "Withania somnifera"
                  },
                  "family": {
                    "type": "string",
                    "description": "Botanical family of the herb",
                    "example": "Solanaceae"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the herb species",
                    "example": "A medicinal herb known for its adaptogenic properties and stress-relieving benefits"
                  },
                  "medicinalUses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of medicinal uses",
                    "example": [
                      "Stress relief",
                      "Immunity booster",
                      "Sleep aid",
                      "Anti-inflammatory"
                    ]
                  },
                  "nativeRegions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Native regions where the species grows",
                    "example": [
                      "India",
                      "Middle East",
                      "Africa",
                      "Mediterranean"
                    ]
                  },
                  "harvestingSeason": {
                    "type": "string",
                    "description": "Optimal harvesting season",
                    "example": "Winter (November to February)"
                  },
                  "partsUsed": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Parts of the plant used medicinally",
                    "example": [
                      "Roots",
                      "Leaves",
                      "Berries"
                    ]
                  },
                  "conservationStatus": {
                    "$ref": "#/components/schemas/ConservationStatus"
                  },
                  "regulatoryInfo": {
                    "type": "object",
                    "description": "Regulatory information as JSON",
                    "example": {
                      "ayush_approval": true,
                      "fda_status": "GRAS",
                      "export_restrictions": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Herb species created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all herb species",
        "description": "Retrieve herb species with pagination and filtering",
        "tags": [
          "Species"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "conservationStatus",
            "schema": {
              "$ref": "#/components/schemas/ConservationStatus"
            },
            "description": "Filter by conservation status"
          },
          {
            "in": "query",
            "name": "commonName",
            "schema": {
              "type": "string"
            },
            "description": "Filter by common name"
          },
          {
            "in": "query",
            "name": "scientificName",
            "schema": {
              "type": "string"
            },
            "description": "Filter by scientific name"
          }
        ],
        "responses": {
          "200": {
            "description": "List of herb species"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/species/region/{region}": {
      "get": {
        "summary": "Get herb species by native region",
        "description": "Retrieve herb species that are native to a specific region",
        "tags": [
          "Species"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "region",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Native region to search for"
          }
        ],
        "responses": {
          "200": {
            "description": "Herb species native to the region"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No species found for the region"
          }
        }
      }
    },
    "/api/species/{id}": {
      "get": {
        "summary": "Get a herb species by ID",
        "description": "Retrieve detailed information about a specific herb species",
        "tags": [
          "Species"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Species ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Herb species details"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Herb species not found"
          }
        }
      },
      "put": {
        "summary": "Update a herb species",
        "description": "Update an existing herb species information",
        "tags": [
          "Species"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Species ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "commonName": {
                    "type": "string"
                  },
                  "scientificName": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "conservationStatus": {
                    "$ref": "#/components/schemas/ConservationStatus"
                  },
                  "nativeRegion": {
                    "type": "string"
                  },
                  "regulatoryStatus": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Herb species updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Herb species not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a herb species",
        "description": "Delete a herb species from the system",
        "tags": [
          "Species"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Species ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Herb species deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Herb species not found"
          }
        }
      }
    },
    "/api/organization": {
      "post": {
        "summary": "Create a new organization",
        "tags": [
          "Organization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of organization"
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Auto-generated organization ID"
                        },
                        "type": {
                          "type": "string"
                        },
                        "users": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/utils/enums": {
      "get": {
        "summary": "Get all available enum values for testing",
        "description": "Returns all enum values used in the API for easy testing and validation",
        "tags": [
          "Utilities"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all enum values",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "enums": {
                          "type": "object",
                          "description": "All available enum values organized by type",
                          "example": {
                            "OrgType": [
                              "FARMER",
                              "MANUFACTURER",
                              "LABS",
                              "DISTRIBUTOR"
                            ],
                            "QuantityUnit": [
                              "KG",
                              "TONNES",
                              "GRAMS",
                              "POUNDS",
                              "PIECES",
                              "BOTTLES",
                              "BOXES"
                            ]
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-09-05T10:30:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/utils/test-data": {
      "get": {
        "summary": "Get sample test data for all endpoints",
        "description": "Returns sample data objects for testing all API endpoints with valid enum values",
        "tags": [
          "Utilities"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved test data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "sampleData": {
                          "type": "object",
                          "description": "Sample data for testing each endpoint"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}